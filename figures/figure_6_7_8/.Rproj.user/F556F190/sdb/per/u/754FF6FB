{
    "contents" : "##############################################################\n# R code for \"A brief tour of R/qtl\"\n#\n# Karl W Broman, kbroman@biostat.wisc.edu\n# University of Wisconsin Madison\n#\n# http://www.rqtl.org\n#\n# 21 March 2012\n##############################################################\n\nsave.image()\n\nlibrary(qtl)\n\nls()\n\nhelp(read.cross)\n?read.cross\n\n############################################################\n# Example 1: Hypertension\n############################################################\ndata(hyper)\nls()\n?hyper\n\nsummary(hyper)\n\nnind(hyper)\nnphe(hyper)\nnchr(hyper)\ntotmar(hyper)\nnmar(hyper)\n\nplot(hyper)\n\nplotMissing(hyper)\nplotMap(hyper)\nplotPheno(hyper, pheno.col=1)\n\nplotMap(hyper, chr=c(1, 4, 6, 7, 15), show.marker.names=TRUE)\n\nplotMissing(hyper, reorder=TRUE)\n\nhyper <- drop.nullmarkers(hyper)\ntotmar(hyper)\n\nhyper <- est.rf(hyper)\nplotRF(hyper)\nplotRF(hyper, chr=c(1,4))\n\nplotRF(hyper, chr=6)\nplotMissing(hyper, chr=6)\n\nnewmap <- est.map(hyper, error.prob=0.01)\nplotMap(hyper, newmap)\n\nhyper <- replace.map(hyper, newmap)\n\nhyper <- calc.errorlod(hyper, error.prob=0.01)\n\ntop.errorlod(hyper)\n\nplotGeno(hyper, chr=16, ind=c(24:34, 71:81))\n\nplotInfo(hyper)\nplotInfo(hyper, chr=c(1,4,15))\nplotInfo(hyper, chr=c(1,4,15), method=\"entropy\")\nplotInfo(hyper, chr=c(1,4,15), method=\"variance\")\n\nhyper <- calc.genoprob(hyper, step=1, error.prob=0.01)\n\nout.em <- scanone(hyper)\nout.hk <- scanone(hyper, method=\"hk\")\n\nhyper <- sim.geno(hyper, step=2, n.draws=16, error.prob=0.01)\nout.imp <- scanone(hyper, method=\"imp\")\n\nsummary(out.em)\nsummary(out.em, threshold=3)\nsummary(out.hk, threshold=3)\nsummary(out.imp, threshold=3)\n\nmax(out.em)\nmax(out.hk)\nmax(out.imp)\n\nplot(out.em, chr=c(1,4,15))\nplot(out.em, out.hk, out.imp, chr=c(1,4,15))\nplot(out.em, chr=c(1,4,15))\nplot(out.hk, chr=c(1,4,15), col=\"blue\", add=TRUE)\nplot(out.imp, chr=c(1,4,15), col=\"red\", add=TRUE)\n\noperm.hk <- scanone(hyper, method=\"hk\", n.perm=1000)\n\nsummary(operm.hk, alpha=0.05)\n\nsummary(out.hk, perms=operm.hk, alpha=0.05, pvalues=TRUE)\n\nsave.image()\n\nhyper <- calc.genoprob(hyper, step=5, error.prob=0.01)\n\nout2.hk <- scantwo(hyper, method=\"hk\")\n\nsummary(out2.hk, thresholds=c(6.0, 4.7, 4.4, 4.7, 2.6))\n\nsummary(out2.hk, thresholds=c(6.0, 4.7, Inf, 4.7, 2.6))\n\nplot(out2.hk)\nplot(out2.hk, chr=c(1,4,6,15))\n\nmax(out2.hk)\n\noperm2.hk <- scantwo(hyper, method=\"hk\", n.perm=100)\n\nsummary(operm2.hk)\n\nsummary(out2.hk, perms=operm2.hk, pvalues=TRUE,\n        alphas=c(0.05, 0.05, 0, 0.05, 0.05))\n\nchr <- c(1, 1, 4, 6, 15)\npos <- c(50, 76, 30, 70, 20)\nqtl <- makeqtl(hyper, chr, pos)\n\nmy.formula <- y ~ Q1 + Q2 + Q3 + Q4 + Q5 + Q4:Q5\nout.fitqtl <- fitqtl(hyper, qtl=qtl, formula=my.formula)\nsummary(out.fitqtl)\n\nls()\nrm(list=ls())\n\n############################################################\n# Example 2: Genetic mapping\n############################################################\ndata(badorder)\nsummary(badorder)\nplot(badorder)\n\nbadorder <- est.rf(badorder)\nplotRF(badorder)\n\nplotRF(badorder, chr=1)\n\nnewmap <- est.map(badorder, verbose=TRUE)\nplotMap(badorder, newmap)\n\nplotRF(badorder, chr=2:3)\n\npull.map(badorder, chr=2)\npull.map(badorder, chr=3)\n\nbadorder <- movemarker(badorder, \"D2M937\", 3, 48)\nbadorder <- movemarker(badorder, \"D3M160\", 2, 28.8)\n\nplotRF(badorder, chr=2:3)\n\nrip1 <- ripple(badorder, chr=1, window=6)\nsummary(rip1)\n\nrip2 <- ripple(badorder, chr=1, window=3, err=0.01, method=\"likelihood\")\nsummary(rip2)\n\nbadorder.rev <- switch.order(badorder, 1, rip1[2,])\nrip1r <- ripple(badorder.rev, chr=1, window=6)\nsummary(rip1r)\n\nbadorder.rev <- switch.order(badorder.rev, 1, rip1r[2,])\nrip2r <- ripple(badorder.rev, chr=1, window=3, err=0.01)\nsummary(rip2r)\n\nbadorder.rev <- est.rf(badorder.rev)\nplotRF(badorder.rev, 1)\n\n############################################################\n# Example 3: Listeria susceptibility\n############################################################\ndata(listeria)\nsummary(listeria)\nplot(listeria)\nplotMissing(listeria)\n\nlisteria$pheno$logSurv <- log(listeria$pheno[,1])\nplot(listeria)\n\nlisteria <- est.rf(listeria)\nplotRF(listeria)\nplotRF(listeria, chr=c(5,13))\n\nnewmap <- est.map(listeria, error.prob=0.01)\nplotMap(listeria, newmap)\nlisteria <- replace.map(listeria, newmap)\n\nlisteria <- calc.errorlod(listeria, error.prob=0.01)\ntop.errorlod(listeria)\ntop.errorlod(listeria, cutoff=3.5)\nplotGeno(listeria, chr=13, ind=61:70, cutoff=3.5)\n\nlisteria <- calc.genoprob(listeria, step=2)\nout.2p <- scanone(listeria, pheno.col=3, model=\"2part\", upper=TRUE)\n\nsummary(out.2p)\nsummary(out.2p, threshold=4.5)\n\nsummary(out.2p, format=\"allpeaks\", threshold=3)\nsummary(out.2p, format=\"allpeaks\", threshold=c(4.5,3,3))\n\nplot(out.2p)\nplot(out.2p, lodcolumn=2)\nplot(out.2p, lodcolumn=1:3, chr=c(1,5,13,15))\n\noperm.2p <- scanone(listeria, model=\"2part\", pheno.col=3,\n                    upper=TRUE, n.perm=25)\nsummary(operm.2p, alpha=0.05)\n\nsummary(out.2p, format=\"allpeaks\", perms=operm.2p,\n        alpha=0.05, pvalues=TRUE)\n\ny <- listeria$pheno$logSurv\nmy <- max(y, na.rm=TRUE)\nz <- as.numeric(y==my)\ny[y==my] <- NA\nlisteria$pheno$logSurv2 <- y\nlisteria$pheno$binary <- z\nplot(listeria)\n\nout.mu <- scanone(listeria, pheno.col=4)\nplot(out.mu, out.2p, lodcolumn=c(1,3), chr=c(1,5,13,15), col=c(\"blue\",\"red\"))\n\nout.p <- scanone(listeria, pheno.col=5, model=\"binary\")\nplot(out.p, out.2p, lodcolumn=c(1,2), chr=c(1,5,13,15), col=c(\"blue\",\"red\"))\n\nout.p.alt <- scanone(listeria, pheno.col=as.numeric(listeria$pheno$T264==264),\n                     model=\"binary\")\n\nout.np1 <- scanone(listeria, model=\"np\", ties.random=TRUE)\nout.np2 <- scanone(listeria, model=\"np\", ties.random=FALSE)\n\nplot(out.np1, out.np2, col=c(\"blue\",\"red\"))\nplot(out.2p, out.np1, out.np2, chr=c(1,5,13,15))\n\n############################################################\n# Example 4: Covariates in QTL mapping\n############################################################\ndata(fake.bc)\nsummary(fake.bc)\nplot(fake.bc)\n\nfake.bc <- calc.genoprob(fake.bc, step=2.5)\nout.nocovar <- scanone(fake.bc, pheno.col=1:2)\n\nsex <- fake.bc$pheno$sex\nout.acovar <- scanone(fake.bc, pheno.col=1:2, addcovar=sex)\n\nsummary(out.nocovar, threshold=3, format=\"allpeaks\")\nsummary(out.acovar, threshold=3, format=\"allpeaks\")\n\nplot(out.nocovar, out.acovar, chr=c(2, 5))\nplot(out.nocovar, out.acovar, chr=c(2, 5), lodcolumn=2)\n\nout.icovar <- scanone(fake.bc, pheno.col=1:2, addcovar=sex, intcovar=sex)\n\nsummary(out.icovar, threshold=3, format=\"allpeaks\")\n\nplot(out.acovar, out.icovar, chr=c(2,5), col=c(\"blue\", \"red\"))\nplot(out.acovar, out.icovar, chr=c(2,5), lodcolumn=2,\n     col=c(\"blue\", \"red\"))\n\nout.sexint <- out.icovar - out.acovar\nplot(out.sexint, lodcolumn=1:2, chr=c(2,5), col=c(\"green\", \"purple\"))\n\nseed <- ceiling(runif(1, 0, 10^8))\nset.seed(seed)\noperm.acovar <- scanone(fake.bc, pheno.col=1:2, addcovar=sex,\n                        method=\"hk\", n.perm=100)\nset.seed(seed)\noperm.icovar <- scanone(fake.bc, pheno.col=1:2, addcovar=sex,\n                        intcovar=sex, method=\"hk\", n.perm=100)\n\noperm.sexint <- operm.icovar - operm.acovar\n\nsummary(operm.sexint, alpha=c(0.05, 0.20))\n\nsummary(out.sexint, perms=operm.sexint, alpha=0.1,\n        format=\"allpeaks\", pvalues=TRUE)\n\n############################################################\n# Example 5: Multiple QTL mapping\n############################################################\nrm(list=ls())\ndata(hyper)\n\nhyper <- sim.geno(hyper, step=2.5, n.draws=16, err=0.01)\n\nout1 <- scanone(hyper, method=\"imp\")\nplot(out1)\n\nmax(out1)\n\nfind.marker(hyper, 4, 29.5)\n\ng <- pull.geno(hyper)[,\"D4Mit164\"]\nmean(is.na(g))\n\ng <- pull.geno(fill.geno(hyper))[,\"D4Mit164\"]\n\nout1.c4 <- scanone(hyper, method=\"imp\", addcovar=g)\n\nplot(out1, out1.c4, col=c(\"blue\", \"red\"))\n\nplot(out1.c4 - out1, ylim=c(-3,3))\nabline(h=0, lty=2, col=\"gray\")\n\nout1.c4i <- scanone(hyper, method=\"imp\", addcovar=g, intcovar=g)\n\nplot(out1.c4i - out1.c4)\n\nout2 <- scantwo(hyper, method=\"imp\")\n\nsummary(out2, thr=c(6.0, 4.7, Inf, 4.7, 2.6))\n\nsummary( subset(out2, chr=1) )\n\nsummary( subset(out2, chr=c(7,15)) )\n\nplot(out2, chr=c(1,4,6,7,15))\n\nplot(out2, chr=1, lower=\"cond-add\")\nplot(out2, chr=c(6,15), lower=\"cond-int\")\nplot(out2, chr=c(7,15), lower=\"cond-int\")\n\nout2.c4 <- scantwo(hyper, method=\"imp\", addcovar=g, chr=c(1,6,7,15))\n\nsummary(out2.c4, thr=c(6.0, 4.7, Inf, 4.7, 2.6))\nsummary( subset(out2.c4, chr=1) )\nsummary( subset(out2.c4, chr=c(7,15)) )\n\nplot(out2.c4)\nplot(out2.c4, chr=1, lower=\"cond-int\")\nplot(out2.c4, chr=c(6,15), lower=\"cond-int\")\nplot(out2.c4, chr=c(7,15), lower=\"cond-int\")\n\nout2sub <- subset(out2, chr=c(1,6,7,15))\nplot(out2.c4 - out2sub, allow.neg=TRUE, lower=\"cond-int\")\n\nqc <- c(1, 1, 4, 6, 15)\nqp <- c(43.3, 78.3, 30.0, 62.5, 18.0)\nqtl <- makeqtl(hyper, chr=qc, pos=qp)\n\nmyformula <- y ~ Q1+Q2+Q3+Q4+Q5 + Q4:Q5\n\nout.fq <- fitqtl(hyper, qtl=qtl, formula = myformula)\nsummary(out.fq)\n\nout.fq <- fitqtl(hyper, qtl=qtl, formula = myformula, drop=FALSE, get.ests=TRUE)\nsummary(out.fq)\n\nrevqtl <- refineqtl(hyper, qtl=qtl, formula = myformula)\n\nrevqtl\n\nplot(revqtl)\n\nout.fq2 <- fitqtl(hyper, qtl=revqtl, formula=myformula)\nsummary(out.fq2)\n\nout1.c4r <- addqtl(hyper, qtl=revqtl, formula=y~Q3)\n\nplot(out1.c4, out1.c4r, col=c(\"blue\", \"red\"))\n\nplot(out1.c4r - out1.c4, ylim=c(-1.7, 1.7))\nabline(h=0, lty=2, col=\"gray\")\n\nout2.c4r <- addpair(hyper, qtl=revqtl, formula=y~Q3, chr=c(1,6,7,15))\n\nplot(out2.c4r - out2.c4, lower=\"cond-int\", allow.neg=TRUE)\n\nout.1more <- addqtl(hyper, qtl=revqtl, formula=myformula)\nplot(out.1more)\n\nout.iw4 <- addqtl(hyper, qtl=revqtl, formula=y~Q1+Q2+Q3+Q4+Q5+Q4:Q5+Q6+Q5:Q6)\nplot(out.iw4)\n\nout.2more <- addpair(hyper, qtl=revqtl, formula=myformula, chr=c(2,5,7,15))\n\nplot(out.2more, lower=\"cond-int\")\n\nout.ai <- addint(hyper, qtl=revqtl, formula=myformula)\nout.ai\n\nqtl2 <- addtoqtl(hyper, revqtl, 7, 53.6)\nqtl2\n\nqtl3 <- dropfromqtl(qtl2, index=2)\nqtl3\n\nqtl4 <- replaceqtl(hyper, qtl3, index=1, chr=1, pos=50)\nqtl4\n\nqtl5 <- reorderqtl(qtl4, c(1:3,5,4))\nqtl5\n\nstepout.a <- stepwiseqtl(hyper, additive.only=TRUE, max.qtl=6)\nstepout.a\n\nstepout.i <- stepwiseqtl(hyper, max.qtl=6)\nstepout.i\n\n############################################################\n# Example 6: Internal data structure\n############################################################\ndata(fake.bc)\n\nclass(fake.bc)\n\nnames(fake.bc)\n\nfake.bc$pheno[1:10,]\n\nnames(fake.bc$geno)\nsapply(fake.bc$geno, class)\n\nnames(fake.bc$geno[[3]])\nfake.bc$geno[[3]]$data[1:5,]\nfake.bc$geno[[3]]$map\n\nnames(fake.bc$geno[[3]])\nfake.bc <- calc.genoprob(fake.bc, step=10, err=0.01)\nnames(fake.bc$geno[[3]])\nfake.bc <- sim.geno(fake.bc, step=10, n.draws=8, err=0.01)\nnames(fake.bc$geno[[3]])\nfake.bc <- argmax.geno(fake.bc, step=10, err=0.01)\nnames(fake.bc$geno[[3]])\nfake.bc <- calc.errorlod(fake.bc, err=0.01)\nnames(fake.bc$geno[[3]])\n\nnames(fake.bc)\nfake.bc <- est.rf(fake.bc)\nnames(fake.bc)\n\n# end of rqtltour.R",
    "created" : 1427222004463.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "227425266",
    "id" : "754FF6FB",
    "lastKnownWriteTime" : -5045165487686104572,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}